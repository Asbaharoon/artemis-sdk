/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TextClusterStatisticsDTO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-19T16:35:01.729286Z[Etc/UTC]")
public class TextClusterStatisticsDTO {
  public static final String SERIALIZED_NAME_CLUSTER_ID = "clusterId";
  @SerializedName(SERIALIZED_NAME_CLUSTER_ID)
  private Long clusterId;

  public static final String SERIALIZED_NAME_CLUSTER_SIZE = "clusterSize";
  @SerializedName(SERIALIZED_NAME_CLUSTER_SIZE)
  private Long clusterSize;

  public static final String SERIALIZED_NAME_NUMBER_OF_AUTOMATIC_FEEDBACKS = "numberOfAutomaticFeedbacks";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_AUTOMATIC_FEEDBACKS)
  private Long numberOfAutomaticFeedbacks;

  public static final String SERIALIZED_NAME_DISABLED = "disabled";
  @SerializedName(SERIALIZED_NAME_DISABLED)
  private Boolean disabled;

  public TextClusterStatisticsDTO() {
  }

  public TextClusterStatisticsDTO clusterId(Long clusterId) {
    
    this.clusterId = clusterId;
    return this;
  }

   /**
   * Get clusterId
   * @return clusterId
  **/
  @javax.annotation.Nullable

  public Long getClusterId() {
    return clusterId;
  }


  public void setClusterId(Long clusterId) {
    this.clusterId = clusterId;
  }


  public TextClusterStatisticsDTO clusterSize(Long clusterSize) {
    
    this.clusterSize = clusterSize;
    return this;
  }

   /**
   * Get clusterSize
   * @return clusterSize
  **/
  @javax.annotation.Nullable

  public Long getClusterSize() {
    return clusterSize;
  }


  public void setClusterSize(Long clusterSize) {
    this.clusterSize = clusterSize;
  }


  public TextClusterStatisticsDTO numberOfAutomaticFeedbacks(Long numberOfAutomaticFeedbacks) {
    
    this.numberOfAutomaticFeedbacks = numberOfAutomaticFeedbacks;
    return this;
  }

   /**
   * Get numberOfAutomaticFeedbacks
   * @return numberOfAutomaticFeedbacks
  **/
  @javax.annotation.Nullable

  public Long getNumberOfAutomaticFeedbacks() {
    return numberOfAutomaticFeedbacks;
  }


  public void setNumberOfAutomaticFeedbacks(Long numberOfAutomaticFeedbacks) {
    this.numberOfAutomaticFeedbacks = numberOfAutomaticFeedbacks;
  }


  public TextClusterStatisticsDTO disabled(Boolean disabled) {
    
    this.disabled = disabled;
    return this;
  }

   /**
   * Get disabled
   * @return disabled
  **/
  @javax.annotation.Nullable

  public Boolean getDisabled() {
    return disabled;
  }


  public void setDisabled(Boolean disabled) {
    this.disabled = disabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TextClusterStatisticsDTO textClusterStatisticsDTO = (TextClusterStatisticsDTO) o;
    return Objects.equals(this.clusterId, textClusterStatisticsDTO.clusterId) &&
        Objects.equals(this.clusterSize, textClusterStatisticsDTO.clusterSize) &&
        Objects.equals(this.numberOfAutomaticFeedbacks, textClusterStatisticsDTO.numberOfAutomaticFeedbacks) &&
        Objects.equals(this.disabled, textClusterStatisticsDTO.disabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clusterId, clusterSize, numberOfAutomaticFeedbacks, disabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TextClusterStatisticsDTO {\n");
    sb.append("    clusterId: ").append(toIndentedString(clusterId)).append("\n");
    sb.append("    clusterSize: ").append(toIndentedString(clusterSize)).append("\n");
    sb.append("    numberOfAutomaticFeedbacks: ").append(toIndentedString(numberOfAutomaticFeedbacks)).append("\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("clusterId");
    openapiFields.add("clusterSize");
    openapiFields.add("numberOfAutomaticFeedbacks");
    openapiFields.add("disabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TextClusterStatisticsDTO
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TextClusterStatisticsDTO.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TextClusterStatisticsDTO is not found in the empty JSON string", TextClusterStatisticsDTO.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!TextClusterStatisticsDTO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TextClusterStatisticsDTO` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TextClusterStatisticsDTO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TextClusterStatisticsDTO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TextClusterStatisticsDTO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TextClusterStatisticsDTO.class));

       return (TypeAdapter<T>) new TypeAdapter<TextClusterStatisticsDTO>() {
           @Override
           public void write(JsonWriter out, TextClusterStatisticsDTO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TextClusterStatisticsDTO read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TextClusterStatisticsDTO given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TextClusterStatisticsDTO
  * @throws IOException if the JSON string is invalid with respect to TextClusterStatisticsDTO
  */
  public static TextClusterStatisticsDTO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TextClusterStatisticsDTO.class);
  }

 /**
  * Convert an instance of TextClusterStatisticsDTO to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

