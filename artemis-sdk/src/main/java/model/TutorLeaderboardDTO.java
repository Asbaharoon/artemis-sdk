/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TutorLeaderboardDTO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-19T16:35:01.729286Z[Etc/UTC]")
public class TutorLeaderboardDTO {
  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Long userId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NUMBER_OF_ASSESSMENTS = "numberOfAssessments";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_ASSESSMENTS)
  private Long numberOfAssessments;

  public static final String SERIALIZED_NAME_NUMBER_OF_ACCEPTED_COMPLAINTS = "numberOfAcceptedComplaints";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_ACCEPTED_COMPLAINTS)
  private Long numberOfAcceptedComplaints;

  public static final String SERIALIZED_NAME_NUMBER_OF_TUTOR_COMPLAINTS = "numberOfTutorComplaints";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_TUTOR_COMPLAINTS)
  private Long numberOfTutorComplaints;

  public static final String SERIALIZED_NAME_NUMBER_OF_NOT_ANSWERED_MORE_FEEDBACK_REQUESTS = "numberOfNotAnsweredMoreFeedbackRequests";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_NOT_ANSWERED_MORE_FEEDBACK_REQUESTS)
  private Long numberOfNotAnsweredMoreFeedbackRequests;

  public static final String SERIALIZED_NAME_NUMBER_OF_COMPLAINT_RESPONSES = "numberOfComplaintResponses";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_COMPLAINT_RESPONSES)
  private Long numberOfComplaintResponses;

  public static final String SERIALIZED_NAME_NUMBER_OF_ANSWERED_MORE_FEEDBACK_REQUESTS = "numberOfAnsweredMoreFeedbackRequests";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_ANSWERED_MORE_FEEDBACK_REQUESTS)
  private Long numberOfAnsweredMoreFeedbackRequests;

  public static final String SERIALIZED_NAME_NUMBER_OF_TUTOR_MORE_FEEDBACK_REQUESTS = "numberOfTutorMoreFeedbackRequests";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_TUTOR_MORE_FEEDBACK_REQUESTS)
  private Long numberOfTutorMoreFeedbackRequests;

  public static final String SERIALIZED_NAME_POINTS = "points";
  @SerializedName(SERIALIZED_NAME_POINTS)
  private Double points;

  public static final String SERIALIZED_NAME_AVERAGE_SCORE = "averageScore";
  @SerializedName(SERIALIZED_NAME_AVERAGE_SCORE)
  private Double averageScore;

  public static final String SERIALIZED_NAME_AVERAGE_RATING = "averageRating";
  @SerializedName(SERIALIZED_NAME_AVERAGE_RATING)
  private Double averageRating;

  public static final String SERIALIZED_NAME_NUMBER_OF_TUTOR_RATINGS = "numberOfTutorRatings";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_TUTOR_RATINGS)
  private Long numberOfTutorRatings;

  public TutorLeaderboardDTO() {
  }

  public TutorLeaderboardDTO userId(Long userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable

  public Long getUserId() {
    return userId;
  }


  public void setUserId(Long userId) {
    this.userId = userId;
  }


  public TutorLeaderboardDTO name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public TutorLeaderboardDTO numberOfAssessments(Long numberOfAssessments) {
    
    this.numberOfAssessments = numberOfAssessments;
    return this;
  }

   /**
   * Get numberOfAssessments
   * @return numberOfAssessments
  **/
  @javax.annotation.Nullable

  public Long getNumberOfAssessments() {
    return numberOfAssessments;
  }


  public void setNumberOfAssessments(Long numberOfAssessments) {
    this.numberOfAssessments = numberOfAssessments;
  }


  public TutorLeaderboardDTO numberOfAcceptedComplaints(Long numberOfAcceptedComplaints) {
    
    this.numberOfAcceptedComplaints = numberOfAcceptedComplaints;
    return this;
  }

   /**
   * Get numberOfAcceptedComplaints
   * @return numberOfAcceptedComplaints
  **/
  @javax.annotation.Nullable

  public Long getNumberOfAcceptedComplaints() {
    return numberOfAcceptedComplaints;
  }


  public void setNumberOfAcceptedComplaints(Long numberOfAcceptedComplaints) {
    this.numberOfAcceptedComplaints = numberOfAcceptedComplaints;
  }


  public TutorLeaderboardDTO numberOfTutorComplaints(Long numberOfTutorComplaints) {
    
    this.numberOfTutorComplaints = numberOfTutorComplaints;
    return this;
  }

   /**
   * Get numberOfTutorComplaints
   * @return numberOfTutorComplaints
  **/
  @javax.annotation.Nullable

  public Long getNumberOfTutorComplaints() {
    return numberOfTutorComplaints;
  }


  public void setNumberOfTutorComplaints(Long numberOfTutorComplaints) {
    this.numberOfTutorComplaints = numberOfTutorComplaints;
  }


  public TutorLeaderboardDTO numberOfNotAnsweredMoreFeedbackRequests(Long numberOfNotAnsweredMoreFeedbackRequests) {
    
    this.numberOfNotAnsweredMoreFeedbackRequests = numberOfNotAnsweredMoreFeedbackRequests;
    return this;
  }

   /**
   * Get numberOfNotAnsweredMoreFeedbackRequests
   * @return numberOfNotAnsweredMoreFeedbackRequests
  **/
  @javax.annotation.Nullable

  public Long getNumberOfNotAnsweredMoreFeedbackRequests() {
    return numberOfNotAnsweredMoreFeedbackRequests;
  }


  public void setNumberOfNotAnsweredMoreFeedbackRequests(Long numberOfNotAnsweredMoreFeedbackRequests) {
    this.numberOfNotAnsweredMoreFeedbackRequests = numberOfNotAnsweredMoreFeedbackRequests;
  }


  public TutorLeaderboardDTO numberOfComplaintResponses(Long numberOfComplaintResponses) {
    
    this.numberOfComplaintResponses = numberOfComplaintResponses;
    return this;
  }

   /**
   * Get numberOfComplaintResponses
   * @return numberOfComplaintResponses
  **/
  @javax.annotation.Nullable

  public Long getNumberOfComplaintResponses() {
    return numberOfComplaintResponses;
  }


  public void setNumberOfComplaintResponses(Long numberOfComplaintResponses) {
    this.numberOfComplaintResponses = numberOfComplaintResponses;
  }


  public TutorLeaderboardDTO numberOfAnsweredMoreFeedbackRequests(Long numberOfAnsweredMoreFeedbackRequests) {
    
    this.numberOfAnsweredMoreFeedbackRequests = numberOfAnsweredMoreFeedbackRequests;
    return this;
  }

   /**
   * Get numberOfAnsweredMoreFeedbackRequests
   * @return numberOfAnsweredMoreFeedbackRequests
  **/
  @javax.annotation.Nullable

  public Long getNumberOfAnsweredMoreFeedbackRequests() {
    return numberOfAnsweredMoreFeedbackRequests;
  }


  public void setNumberOfAnsweredMoreFeedbackRequests(Long numberOfAnsweredMoreFeedbackRequests) {
    this.numberOfAnsweredMoreFeedbackRequests = numberOfAnsweredMoreFeedbackRequests;
  }


  public TutorLeaderboardDTO numberOfTutorMoreFeedbackRequests(Long numberOfTutorMoreFeedbackRequests) {
    
    this.numberOfTutorMoreFeedbackRequests = numberOfTutorMoreFeedbackRequests;
    return this;
  }

   /**
   * Get numberOfTutorMoreFeedbackRequests
   * @return numberOfTutorMoreFeedbackRequests
  **/
  @javax.annotation.Nullable

  public Long getNumberOfTutorMoreFeedbackRequests() {
    return numberOfTutorMoreFeedbackRequests;
  }


  public void setNumberOfTutorMoreFeedbackRequests(Long numberOfTutorMoreFeedbackRequests) {
    this.numberOfTutorMoreFeedbackRequests = numberOfTutorMoreFeedbackRequests;
  }


  public TutorLeaderboardDTO points(Double points) {
    
    this.points = points;
    return this;
  }

   /**
   * Get points
   * @return points
  **/
  @javax.annotation.Nullable

  public Double getPoints() {
    return points;
  }


  public void setPoints(Double points) {
    this.points = points;
  }


  public TutorLeaderboardDTO averageScore(Double averageScore) {
    
    this.averageScore = averageScore;
    return this;
  }

   /**
   * Get averageScore
   * @return averageScore
  **/
  @javax.annotation.Nullable

  public Double getAverageScore() {
    return averageScore;
  }


  public void setAverageScore(Double averageScore) {
    this.averageScore = averageScore;
  }


  public TutorLeaderboardDTO averageRating(Double averageRating) {
    
    this.averageRating = averageRating;
    return this;
  }

   /**
   * Get averageRating
   * @return averageRating
  **/
  @javax.annotation.Nullable

  public Double getAverageRating() {
    return averageRating;
  }


  public void setAverageRating(Double averageRating) {
    this.averageRating = averageRating;
  }


  public TutorLeaderboardDTO numberOfTutorRatings(Long numberOfTutorRatings) {
    
    this.numberOfTutorRatings = numberOfTutorRatings;
    return this;
  }

   /**
   * Get numberOfTutorRatings
   * @return numberOfTutorRatings
  **/
  @javax.annotation.Nullable

  public Long getNumberOfTutorRatings() {
    return numberOfTutorRatings;
  }


  public void setNumberOfTutorRatings(Long numberOfTutorRatings) {
    this.numberOfTutorRatings = numberOfTutorRatings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TutorLeaderboardDTO tutorLeaderboardDTO = (TutorLeaderboardDTO) o;
    return Objects.equals(this.userId, tutorLeaderboardDTO.userId) &&
        Objects.equals(this.name, tutorLeaderboardDTO.name) &&
        Objects.equals(this.numberOfAssessments, tutorLeaderboardDTO.numberOfAssessments) &&
        Objects.equals(this.numberOfAcceptedComplaints, tutorLeaderboardDTO.numberOfAcceptedComplaints) &&
        Objects.equals(this.numberOfTutorComplaints, tutorLeaderboardDTO.numberOfTutorComplaints) &&
        Objects.equals(this.numberOfNotAnsweredMoreFeedbackRequests, tutorLeaderboardDTO.numberOfNotAnsweredMoreFeedbackRequests) &&
        Objects.equals(this.numberOfComplaintResponses, tutorLeaderboardDTO.numberOfComplaintResponses) &&
        Objects.equals(this.numberOfAnsweredMoreFeedbackRequests, tutorLeaderboardDTO.numberOfAnsweredMoreFeedbackRequests) &&
        Objects.equals(this.numberOfTutorMoreFeedbackRequests, tutorLeaderboardDTO.numberOfTutorMoreFeedbackRequests) &&
        Objects.equals(this.points, tutorLeaderboardDTO.points) &&
        Objects.equals(this.averageScore, tutorLeaderboardDTO.averageScore) &&
        Objects.equals(this.averageRating, tutorLeaderboardDTO.averageRating) &&
        Objects.equals(this.numberOfTutorRatings, tutorLeaderboardDTO.numberOfTutorRatings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, name, numberOfAssessments, numberOfAcceptedComplaints, numberOfTutorComplaints, numberOfNotAnsweredMoreFeedbackRequests, numberOfComplaintResponses, numberOfAnsweredMoreFeedbackRequests, numberOfTutorMoreFeedbackRequests, points, averageScore, averageRating, numberOfTutorRatings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TutorLeaderboardDTO {\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    numberOfAssessments: ").append(toIndentedString(numberOfAssessments)).append("\n");
    sb.append("    numberOfAcceptedComplaints: ").append(toIndentedString(numberOfAcceptedComplaints)).append("\n");
    sb.append("    numberOfTutorComplaints: ").append(toIndentedString(numberOfTutorComplaints)).append("\n");
    sb.append("    numberOfNotAnsweredMoreFeedbackRequests: ").append(toIndentedString(numberOfNotAnsweredMoreFeedbackRequests)).append("\n");
    sb.append("    numberOfComplaintResponses: ").append(toIndentedString(numberOfComplaintResponses)).append("\n");
    sb.append("    numberOfAnsweredMoreFeedbackRequests: ").append(toIndentedString(numberOfAnsweredMoreFeedbackRequests)).append("\n");
    sb.append("    numberOfTutorMoreFeedbackRequests: ").append(toIndentedString(numberOfTutorMoreFeedbackRequests)).append("\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
    sb.append("    averageScore: ").append(toIndentedString(averageScore)).append("\n");
    sb.append("    averageRating: ").append(toIndentedString(averageRating)).append("\n");
    sb.append("    numberOfTutorRatings: ").append(toIndentedString(numberOfTutorRatings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("userId");
    openapiFields.add("name");
    openapiFields.add("numberOfAssessments");
    openapiFields.add("numberOfAcceptedComplaints");
    openapiFields.add("numberOfTutorComplaints");
    openapiFields.add("numberOfNotAnsweredMoreFeedbackRequests");
    openapiFields.add("numberOfComplaintResponses");
    openapiFields.add("numberOfAnsweredMoreFeedbackRequests");
    openapiFields.add("numberOfTutorMoreFeedbackRequests");
    openapiFields.add("points");
    openapiFields.add("averageScore");
    openapiFields.add("averageRating");
    openapiFields.add("numberOfTutorRatings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TutorLeaderboardDTO
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TutorLeaderboardDTO.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TutorLeaderboardDTO is not found in the empty JSON string", TutorLeaderboardDTO.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!TutorLeaderboardDTO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TutorLeaderboardDTO` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TutorLeaderboardDTO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TutorLeaderboardDTO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TutorLeaderboardDTO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TutorLeaderboardDTO.class));

       return (TypeAdapter<T>) new TypeAdapter<TutorLeaderboardDTO>() {
           @Override
           public void write(JsonWriter out, TutorLeaderboardDTO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TutorLeaderboardDTO read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TutorLeaderboardDTO given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TutorLeaderboardDTO
  * @throws IOException if the JSON string is invalid with respect to TutorLeaderboardDTO
  */
  public static TutorLeaderboardDTO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TutorLeaderboardDTO.class);
  }

 /**
  * Convert an instance of TutorLeaderboardDTO to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

