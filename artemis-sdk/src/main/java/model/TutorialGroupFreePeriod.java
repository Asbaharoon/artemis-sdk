/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.openapitools.client.model.TutorialGroupsConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TutorialGroupFreePeriod
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-19T16:35:01.729286Z[Etc/UTC]")
public class TutorialGroupFreePeriod {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_TUTORIAL_GROUPS_CONFIGURATION = "tutorialGroupsConfiguration";
  @SerializedName(SERIALIZED_NAME_TUTORIAL_GROUPS_CONFIGURATION)
  private TutorialGroupsConfiguration tutorialGroupsConfiguration;

  public static final String SERIALIZED_NAME_START = "start";
  @SerializedName(SERIALIZED_NAME_START)
  private OffsetDateTime start;

  public static final String SERIALIZED_NAME_END = "end";
  @SerializedName(SERIALIZED_NAME_END)
  private OffsetDateTime end;

  public static final String SERIALIZED_NAME_REASON = "reason";
  @SerializedName(SERIALIZED_NAME_REASON)
  private String reason;

  public TutorialGroupFreePeriod() {
  }

  public TutorialGroupFreePeriod id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public TutorialGroupFreePeriod tutorialGroupsConfiguration(TutorialGroupsConfiguration tutorialGroupsConfiguration) {
    
    this.tutorialGroupsConfiguration = tutorialGroupsConfiguration;
    return this;
  }

   /**
   * Get tutorialGroupsConfiguration
   * @return tutorialGroupsConfiguration
  **/
  @javax.annotation.Nullable

  public TutorialGroupsConfiguration getTutorialGroupsConfiguration() {
    return tutorialGroupsConfiguration;
  }


  public void setTutorialGroupsConfiguration(TutorialGroupsConfiguration tutorialGroupsConfiguration) {
    this.tutorialGroupsConfiguration = tutorialGroupsConfiguration;
  }


  public TutorialGroupFreePeriod start(OffsetDateTime start) {
    
    this.start = start;
    return this;
  }

   /**
   * Get start
   * @return start
  **/
  @javax.annotation.Nullable

  public OffsetDateTime getStart() {
    return start;
  }


  public void setStart(OffsetDateTime start) {
    this.start = start;
  }


  public TutorialGroupFreePeriod end(OffsetDateTime end) {
    
    this.end = end;
    return this;
  }

   /**
   * Get end
   * @return end
  **/
  @javax.annotation.Nullable

  public OffsetDateTime getEnd() {
    return end;
  }


  public void setEnd(OffsetDateTime end) {
    this.end = end;
  }


  public TutorialGroupFreePeriod reason(String reason) {
    
    this.reason = reason;
    return this;
  }

   /**
   * Get reason
   * @return reason
  **/
  @javax.annotation.Nullable

  public String getReason() {
    return reason;
  }


  public void setReason(String reason) {
    this.reason = reason;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TutorialGroupFreePeriod tutorialGroupFreePeriod = (TutorialGroupFreePeriod) o;
    return Objects.equals(this.id, tutorialGroupFreePeriod.id) &&
        Objects.equals(this.tutorialGroupsConfiguration, tutorialGroupFreePeriod.tutorialGroupsConfiguration) &&
        Objects.equals(this.start, tutorialGroupFreePeriod.start) &&
        Objects.equals(this.end, tutorialGroupFreePeriod.end) &&
        Objects.equals(this.reason, tutorialGroupFreePeriod.reason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, tutorialGroupsConfiguration, start, end, reason);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TutorialGroupFreePeriod {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    tutorialGroupsConfiguration: ").append(toIndentedString(tutorialGroupsConfiguration)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("tutorialGroupsConfiguration");
    openapiFields.add("start");
    openapiFields.add("end");
    openapiFields.add("reason");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TutorialGroupFreePeriod
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TutorialGroupFreePeriod.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TutorialGroupFreePeriod is not found in the empty JSON string", TutorialGroupFreePeriod.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!TutorialGroupFreePeriod.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TutorialGroupFreePeriod` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `tutorialGroupsConfiguration`
      if (jsonObj.get("tutorialGroupsConfiguration") != null && !jsonObj.get("tutorialGroupsConfiguration").isJsonNull()) {
        TutorialGroupsConfiguration.validateJsonObject(jsonObj.getAsJsonObject("tutorialGroupsConfiguration"));
      }
      if ((jsonObj.get("reason") != null && !jsonObj.get("reason").isJsonNull()) && !jsonObj.get("reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reason").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TutorialGroupFreePeriod.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TutorialGroupFreePeriod' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TutorialGroupFreePeriod> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TutorialGroupFreePeriod.class));

       return (TypeAdapter<T>) new TypeAdapter<TutorialGroupFreePeriod>() {
           @Override
           public void write(JsonWriter out, TutorialGroupFreePeriod value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TutorialGroupFreePeriod read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TutorialGroupFreePeriod given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TutorialGroupFreePeriod
  * @throws IOException if the JSON string is invalid with respect to TutorialGroupFreePeriod
  */
  public static TutorialGroupFreePeriod fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TutorialGroupFreePeriod.class);
  }

 /**
  * Convert an instance of TutorialGroupFreePeriod to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

