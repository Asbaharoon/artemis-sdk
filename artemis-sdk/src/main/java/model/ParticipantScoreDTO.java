/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ParticipantScoreDTO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-19T16:35:01.729286Z[Etc/UTC]")
public class ParticipantScoreDTO {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Long userId;

  public static final String SERIALIZED_NAME_USER_NAME = "userName";
  @SerializedName(SERIALIZED_NAME_USER_NAME)
  private String userName;

  public static final String SERIALIZED_NAME_TEAM_ID = "teamId";
  @SerializedName(SERIALIZED_NAME_TEAM_ID)
  private Long teamId;

  public static final String SERIALIZED_NAME_TEAM_NAME = "teamName";
  @SerializedName(SERIALIZED_NAME_TEAM_NAME)
  private String teamName;

  public static final String SERIALIZED_NAME_EXERCISE_ID = "exerciseId";
  @SerializedName(SERIALIZED_NAME_EXERCISE_ID)
  private Long exerciseId;

  public static final String SERIALIZED_NAME_EXERCISE_TITLE = "exerciseTitle";
  @SerializedName(SERIALIZED_NAME_EXERCISE_TITLE)
  private String exerciseTitle;

  public static final String SERIALIZED_NAME_LAST_RESULT_ID = "lastResultId";
  @SerializedName(SERIALIZED_NAME_LAST_RESULT_ID)
  private Long lastResultId;

  public static final String SERIALIZED_NAME_LAST_RESULT_SCORE = "lastResultScore";
  @SerializedName(SERIALIZED_NAME_LAST_RESULT_SCORE)
  private Double lastResultScore;

  public static final String SERIALIZED_NAME_LAST_RATED_RESULT_ID = "lastRatedResultId";
  @SerializedName(SERIALIZED_NAME_LAST_RATED_RESULT_ID)
  private Long lastRatedResultId;

  public static final String SERIALIZED_NAME_LAST_RATED_RESULT_SCORE = "lastRatedResultScore";
  @SerializedName(SERIALIZED_NAME_LAST_RATED_RESULT_SCORE)
  private Double lastRatedResultScore;

  public static final String SERIALIZED_NAME_LAST_POINTS = "lastPoints";
  @SerializedName(SERIALIZED_NAME_LAST_POINTS)
  private Double lastPoints;

  public static final String SERIALIZED_NAME_LAST_RATED_POINTS = "lastRatedPoints";
  @SerializedName(SERIALIZED_NAME_LAST_RATED_POINTS)
  private Double lastRatedPoints;

  public ParticipantScoreDTO() {
  }

  public ParticipantScoreDTO id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public ParticipantScoreDTO userId(Long userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable

  public Long getUserId() {
    return userId;
  }


  public void setUserId(Long userId) {
    this.userId = userId;
  }


  public ParticipantScoreDTO userName(String userName) {
    
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @javax.annotation.Nullable

  public String getUserName() {
    return userName;
  }


  public void setUserName(String userName) {
    this.userName = userName;
  }


  public ParticipantScoreDTO teamId(Long teamId) {
    
    this.teamId = teamId;
    return this;
  }

   /**
   * Get teamId
   * @return teamId
  **/
  @javax.annotation.Nullable

  public Long getTeamId() {
    return teamId;
  }


  public void setTeamId(Long teamId) {
    this.teamId = teamId;
  }


  public ParticipantScoreDTO teamName(String teamName) {
    
    this.teamName = teamName;
    return this;
  }

   /**
   * Get teamName
   * @return teamName
  **/
  @javax.annotation.Nullable

  public String getTeamName() {
    return teamName;
  }


  public void setTeamName(String teamName) {
    this.teamName = teamName;
  }


  public ParticipantScoreDTO exerciseId(Long exerciseId) {
    
    this.exerciseId = exerciseId;
    return this;
  }

   /**
   * Get exerciseId
   * @return exerciseId
  **/
  @javax.annotation.Nullable

  public Long getExerciseId() {
    return exerciseId;
  }


  public void setExerciseId(Long exerciseId) {
    this.exerciseId = exerciseId;
  }


  public ParticipantScoreDTO exerciseTitle(String exerciseTitle) {
    
    this.exerciseTitle = exerciseTitle;
    return this;
  }

   /**
   * Get exerciseTitle
   * @return exerciseTitle
  **/
  @javax.annotation.Nullable

  public String getExerciseTitle() {
    return exerciseTitle;
  }


  public void setExerciseTitle(String exerciseTitle) {
    this.exerciseTitle = exerciseTitle;
  }


  public ParticipantScoreDTO lastResultId(Long lastResultId) {
    
    this.lastResultId = lastResultId;
    return this;
  }

   /**
   * Get lastResultId
   * @return lastResultId
  **/
  @javax.annotation.Nullable

  public Long getLastResultId() {
    return lastResultId;
  }


  public void setLastResultId(Long lastResultId) {
    this.lastResultId = lastResultId;
  }


  public ParticipantScoreDTO lastResultScore(Double lastResultScore) {
    
    this.lastResultScore = lastResultScore;
    return this;
  }

   /**
   * Get lastResultScore
   * @return lastResultScore
  **/
  @javax.annotation.Nullable

  public Double getLastResultScore() {
    return lastResultScore;
  }


  public void setLastResultScore(Double lastResultScore) {
    this.lastResultScore = lastResultScore;
  }


  public ParticipantScoreDTO lastRatedResultId(Long lastRatedResultId) {
    
    this.lastRatedResultId = lastRatedResultId;
    return this;
  }

   /**
   * Get lastRatedResultId
   * @return lastRatedResultId
  **/
  @javax.annotation.Nullable

  public Long getLastRatedResultId() {
    return lastRatedResultId;
  }


  public void setLastRatedResultId(Long lastRatedResultId) {
    this.lastRatedResultId = lastRatedResultId;
  }


  public ParticipantScoreDTO lastRatedResultScore(Double lastRatedResultScore) {
    
    this.lastRatedResultScore = lastRatedResultScore;
    return this;
  }

   /**
   * Get lastRatedResultScore
   * @return lastRatedResultScore
  **/
  @javax.annotation.Nullable

  public Double getLastRatedResultScore() {
    return lastRatedResultScore;
  }


  public void setLastRatedResultScore(Double lastRatedResultScore) {
    this.lastRatedResultScore = lastRatedResultScore;
  }


  public ParticipantScoreDTO lastPoints(Double lastPoints) {
    
    this.lastPoints = lastPoints;
    return this;
  }

   /**
   * Get lastPoints
   * @return lastPoints
  **/
  @javax.annotation.Nullable

  public Double getLastPoints() {
    return lastPoints;
  }


  public void setLastPoints(Double lastPoints) {
    this.lastPoints = lastPoints;
  }


  public ParticipantScoreDTO lastRatedPoints(Double lastRatedPoints) {
    
    this.lastRatedPoints = lastRatedPoints;
    return this;
  }

   /**
   * Get lastRatedPoints
   * @return lastRatedPoints
  **/
  @javax.annotation.Nullable

  public Double getLastRatedPoints() {
    return lastRatedPoints;
  }


  public void setLastRatedPoints(Double lastRatedPoints) {
    this.lastRatedPoints = lastRatedPoints;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ParticipantScoreDTO participantScoreDTO = (ParticipantScoreDTO) o;
    return Objects.equals(this.id, participantScoreDTO.id) &&
        Objects.equals(this.userId, participantScoreDTO.userId) &&
        Objects.equals(this.userName, participantScoreDTO.userName) &&
        Objects.equals(this.teamId, participantScoreDTO.teamId) &&
        Objects.equals(this.teamName, participantScoreDTO.teamName) &&
        Objects.equals(this.exerciseId, participantScoreDTO.exerciseId) &&
        Objects.equals(this.exerciseTitle, participantScoreDTO.exerciseTitle) &&
        Objects.equals(this.lastResultId, participantScoreDTO.lastResultId) &&
        Objects.equals(this.lastResultScore, participantScoreDTO.lastResultScore) &&
        Objects.equals(this.lastRatedResultId, participantScoreDTO.lastRatedResultId) &&
        Objects.equals(this.lastRatedResultScore, participantScoreDTO.lastRatedResultScore) &&
        Objects.equals(this.lastPoints, participantScoreDTO.lastPoints) &&
        Objects.equals(this.lastRatedPoints, participantScoreDTO.lastRatedPoints);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, userId, userName, teamId, teamName, exerciseId, exerciseTitle, lastResultId, lastResultScore, lastRatedResultId, lastRatedResultScore, lastPoints, lastRatedPoints);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ParticipantScoreDTO {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    teamId: ").append(toIndentedString(teamId)).append("\n");
    sb.append("    teamName: ").append(toIndentedString(teamName)).append("\n");
    sb.append("    exerciseId: ").append(toIndentedString(exerciseId)).append("\n");
    sb.append("    exerciseTitle: ").append(toIndentedString(exerciseTitle)).append("\n");
    sb.append("    lastResultId: ").append(toIndentedString(lastResultId)).append("\n");
    sb.append("    lastResultScore: ").append(toIndentedString(lastResultScore)).append("\n");
    sb.append("    lastRatedResultId: ").append(toIndentedString(lastRatedResultId)).append("\n");
    sb.append("    lastRatedResultScore: ").append(toIndentedString(lastRatedResultScore)).append("\n");
    sb.append("    lastPoints: ").append(toIndentedString(lastPoints)).append("\n");
    sb.append("    lastRatedPoints: ").append(toIndentedString(lastRatedPoints)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("userId");
    openapiFields.add("userName");
    openapiFields.add("teamId");
    openapiFields.add("teamName");
    openapiFields.add("exerciseId");
    openapiFields.add("exerciseTitle");
    openapiFields.add("lastResultId");
    openapiFields.add("lastResultScore");
    openapiFields.add("lastRatedResultId");
    openapiFields.add("lastRatedResultScore");
    openapiFields.add("lastPoints");
    openapiFields.add("lastRatedPoints");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ParticipantScoreDTO
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ParticipantScoreDTO.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ParticipantScoreDTO is not found in the empty JSON string", ParticipantScoreDTO.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ParticipantScoreDTO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ParticipantScoreDTO` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("userName") != null && !jsonObj.get("userName").isJsonNull()) && !jsonObj.get("userName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userName").toString()));
      }
      if ((jsonObj.get("teamName") != null && !jsonObj.get("teamName").isJsonNull()) && !jsonObj.get("teamName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `teamName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("teamName").toString()));
      }
      if ((jsonObj.get("exerciseTitle") != null && !jsonObj.get("exerciseTitle").isJsonNull()) && !jsonObj.get("exerciseTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `exerciseTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("exerciseTitle").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ParticipantScoreDTO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ParticipantScoreDTO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ParticipantScoreDTO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ParticipantScoreDTO.class));

       return (TypeAdapter<T>) new TypeAdapter<ParticipantScoreDTO>() {
           @Override
           public void write(JsonWriter out, ParticipantScoreDTO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ParticipantScoreDTO read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ParticipantScoreDTO given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ParticipantScoreDTO
  * @throws IOException if the JSON string is invalid with respect to ParticipantScoreDTO
  */
  public static ParticipantScoreDTO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ParticipantScoreDTO.class);
  }

 /**
  * Convert an instance of ParticipantScoreDTO to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

