/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.openapitools.client.model.TutorialGroup;
import org.openapitools.client.model.TutorialGroupFreePeriod;
import org.openapitools.client.model.TutorialGroupSchedule;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TutorialGroupSession
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-19T16:35:01.729286Z[Etc/UTC]")
public class TutorialGroupSession {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_START = "start";
  @SerializedName(SERIALIZED_NAME_START)
  private OffsetDateTime start;

  public static final String SERIALIZED_NAME_END = "end";
  @SerializedName(SERIALIZED_NAME_END)
  private OffsetDateTime end;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    ACTIVE("ACTIVE"),
    
    CANCELLED("CANCELLED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_STATUS_EXPLANATION = "statusExplanation";
  @SerializedName(SERIALIZED_NAME_STATUS_EXPLANATION)
  private String statusExplanation;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_ATTENDANCE_COUNT = "attendanceCount";
  @SerializedName(SERIALIZED_NAME_ATTENDANCE_COUNT)
  private Integer attendanceCount;

  public static final String SERIALIZED_NAME_TUTORIAL_GROUP_SCHEDULE = "tutorialGroupSchedule";
  @SerializedName(SERIALIZED_NAME_TUTORIAL_GROUP_SCHEDULE)
  private TutorialGroupSchedule tutorialGroupSchedule;

  public static final String SERIALIZED_NAME_TUTORIAL_GROUP_FREE_PERIOD = "tutorialGroupFreePeriod";
  @SerializedName(SERIALIZED_NAME_TUTORIAL_GROUP_FREE_PERIOD)
  private TutorialGroupFreePeriod tutorialGroupFreePeriod;

  public static final String SERIALIZED_NAME_TUTORIAL_GROUP = "tutorialGroup";
  @SerializedName(SERIALIZED_NAME_TUTORIAL_GROUP)
  private TutorialGroup tutorialGroup;

  public TutorialGroupSession() {
  }

  public TutorialGroupSession id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public TutorialGroupSession start(OffsetDateTime start) {
    
    this.start = start;
    return this;
  }

   /**
   * Get start
   * @return start
  **/
  @javax.annotation.Nullable

  public OffsetDateTime getStart() {
    return start;
  }


  public void setStart(OffsetDateTime start) {
    this.start = start;
  }


  public TutorialGroupSession end(OffsetDateTime end) {
    
    this.end = end;
    return this;
  }

   /**
   * Get end
   * @return end
  **/
  @javax.annotation.Nullable

  public OffsetDateTime getEnd() {
    return end;
  }


  public void setEnd(OffsetDateTime end) {
    this.end = end;
  }


  public TutorialGroupSession status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public TutorialGroupSession statusExplanation(String statusExplanation) {
    
    this.statusExplanation = statusExplanation;
    return this;
  }

   /**
   * Get statusExplanation
   * @return statusExplanation
  **/
  @javax.annotation.Nullable

  public String getStatusExplanation() {
    return statusExplanation;
  }


  public void setStatusExplanation(String statusExplanation) {
    this.statusExplanation = statusExplanation;
  }


  public TutorialGroupSession location(String location) {
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable

  public String getLocation() {
    return location;
  }


  public void setLocation(String location) {
    this.location = location;
  }


  public TutorialGroupSession attendanceCount(Integer attendanceCount) {
    
    this.attendanceCount = attendanceCount;
    return this;
  }

   /**
   * Get attendanceCount
   * minimum: 0
   * maximum: 3000
   * @return attendanceCount
  **/
  @javax.annotation.Nullable

  public Integer getAttendanceCount() {
    return attendanceCount;
  }


  public void setAttendanceCount(Integer attendanceCount) {
    this.attendanceCount = attendanceCount;
  }


  public TutorialGroupSession tutorialGroupSchedule(TutorialGroupSchedule tutorialGroupSchedule) {
    
    this.tutorialGroupSchedule = tutorialGroupSchedule;
    return this;
  }

   /**
   * Get tutorialGroupSchedule
   * @return tutorialGroupSchedule
  **/
  @javax.annotation.Nullable

  public TutorialGroupSchedule getTutorialGroupSchedule() {
    return tutorialGroupSchedule;
  }


  public void setTutorialGroupSchedule(TutorialGroupSchedule tutorialGroupSchedule) {
    this.tutorialGroupSchedule = tutorialGroupSchedule;
  }


  public TutorialGroupSession tutorialGroupFreePeriod(TutorialGroupFreePeriod tutorialGroupFreePeriod) {
    
    this.tutorialGroupFreePeriod = tutorialGroupFreePeriod;
    return this;
  }

   /**
   * Get tutorialGroupFreePeriod
   * @return tutorialGroupFreePeriod
  **/
  @javax.annotation.Nullable

  public TutorialGroupFreePeriod getTutorialGroupFreePeriod() {
    return tutorialGroupFreePeriod;
  }


  public void setTutorialGroupFreePeriod(TutorialGroupFreePeriod tutorialGroupFreePeriod) {
    this.tutorialGroupFreePeriod = tutorialGroupFreePeriod;
  }


  public TutorialGroupSession tutorialGroup(TutorialGroup tutorialGroup) {
    
    this.tutorialGroup = tutorialGroup;
    return this;
  }

   /**
   * Get tutorialGroup
   * @return tutorialGroup
  **/
  @javax.annotation.Nullable

  public TutorialGroup getTutorialGroup() {
    return tutorialGroup;
  }


  public void setTutorialGroup(TutorialGroup tutorialGroup) {
    this.tutorialGroup = tutorialGroup;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TutorialGroupSession tutorialGroupSession = (TutorialGroupSession) o;
    return Objects.equals(this.id, tutorialGroupSession.id) &&
        Objects.equals(this.start, tutorialGroupSession.start) &&
        Objects.equals(this.end, tutorialGroupSession.end) &&
        Objects.equals(this.status, tutorialGroupSession.status) &&
        Objects.equals(this.statusExplanation, tutorialGroupSession.statusExplanation) &&
        Objects.equals(this.location, tutorialGroupSession.location) &&
        Objects.equals(this.attendanceCount, tutorialGroupSession.attendanceCount) &&
        Objects.equals(this.tutorialGroupSchedule, tutorialGroupSession.tutorialGroupSchedule) &&
        Objects.equals(this.tutorialGroupFreePeriod, tutorialGroupSession.tutorialGroupFreePeriod) &&
        Objects.equals(this.tutorialGroup, tutorialGroupSession.tutorialGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, start, end, status, statusExplanation, location, attendanceCount, tutorialGroupSchedule, tutorialGroupFreePeriod, tutorialGroup);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TutorialGroupSession {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusExplanation: ").append(toIndentedString(statusExplanation)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    attendanceCount: ").append(toIndentedString(attendanceCount)).append("\n");
    sb.append("    tutorialGroupSchedule: ").append(toIndentedString(tutorialGroupSchedule)).append("\n");
    sb.append("    tutorialGroupFreePeriod: ").append(toIndentedString(tutorialGroupFreePeriod)).append("\n");
    sb.append("    tutorialGroup: ").append(toIndentedString(tutorialGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("start");
    openapiFields.add("end");
    openapiFields.add("status");
    openapiFields.add("statusExplanation");
    openapiFields.add("location");
    openapiFields.add("attendanceCount");
    openapiFields.add("tutorialGroupSchedule");
    openapiFields.add("tutorialGroupFreePeriod");
    openapiFields.add("tutorialGroup");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TutorialGroupSession
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TutorialGroupSession.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TutorialGroupSession is not found in the empty JSON string", TutorialGroupSession.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!TutorialGroupSession.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TutorialGroupSession` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("statusExplanation") != null && !jsonObj.get("statusExplanation").isJsonNull()) && !jsonObj.get("statusExplanation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statusExplanation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statusExplanation").toString()));
      }
      if ((jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) && !jsonObj.get("location").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `location` to be a primitive type in the JSON string but got `%s`", jsonObj.get("location").toString()));
      }
      // validate the optional field `tutorialGroupSchedule`
      if (jsonObj.get("tutorialGroupSchedule") != null && !jsonObj.get("tutorialGroupSchedule").isJsonNull()) {
        TutorialGroupSchedule.validateJsonObject(jsonObj.getAsJsonObject("tutorialGroupSchedule"));
      }
      // validate the optional field `tutorialGroupFreePeriod`
      if (jsonObj.get("tutorialGroupFreePeriod") != null && !jsonObj.get("tutorialGroupFreePeriod").isJsonNull()) {
        TutorialGroupFreePeriod.validateJsonObject(jsonObj.getAsJsonObject("tutorialGroupFreePeriod"));
      }
      // validate the optional field `tutorialGroup`
      if (jsonObj.get("tutorialGroup") != null && !jsonObj.get("tutorialGroup").isJsonNull()) {
        TutorialGroup.validateJsonObject(jsonObj.getAsJsonObject("tutorialGroup"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TutorialGroupSession.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TutorialGroupSession' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TutorialGroupSession> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TutorialGroupSession.class));

       return (TypeAdapter<T>) new TypeAdapter<TutorialGroupSession>() {
           @Override
           public void write(JsonWriter out, TutorialGroupSession value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TutorialGroupSession read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TutorialGroupSession given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TutorialGroupSession
  * @throws IOException if the JSON string is invalid with respect to TutorialGroupSession
  */
  public static TutorialGroupSession fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TutorialGroupSession.class);
  }

 /**
  * Convert an instance of TutorialGroupSession to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

