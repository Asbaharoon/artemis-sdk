/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.LinkedHashSet;
import java.util.Set;
import org.openapitools.client.model.Course;
import org.openapitools.client.model.TutorialGroupSchedule;
import org.openapitools.client.model.TutorialGroupSession;
import org.openapitools.client.model.User;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TutorialGroup
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-19T16:35:01.729286Z[Etc/UTC]")
public class TutorialGroup {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_COURSE = "course";
  @SerializedName(SERIALIZED_NAME_COURSE)
  private Course course;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_ADDITIONAL_INFORMATION = "additionalInformation";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_INFORMATION)
  private String additionalInformation;

  public static final String SERIALIZED_NAME_CAPACITY = "capacity";
  @SerializedName(SERIALIZED_NAME_CAPACITY)
  private Integer capacity;

  public static final String SERIALIZED_NAME_IS_ONLINE = "isOnline";
  @SerializedName(SERIALIZED_NAME_IS_ONLINE)
  private Boolean isOnline;

  public static final String SERIALIZED_NAME_CAMPUS = "campus";
  @SerializedName(SERIALIZED_NAME_CAMPUS)
  private String campus;

  /**
   * Gets or Sets language
   */
  @JsonAdapter(LanguageEnum.Adapter.class)
  public enum LanguageEnum {
    ENGLISH("ENGLISH"),
    
    GERMAN("GERMAN");

    private String value;

    LanguageEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LanguageEnum fromValue(String value) {
      for (LanguageEnum b : LanguageEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LanguageEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LanguageEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LanguageEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LanguageEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private LanguageEnum language;

  public static final String SERIALIZED_NAME_TEACHING_ASSISTANT = "teachingAssistant";
  @SerializedName(SERIALIZED_NAME_TEACHING_ASSISTANT)
  private User teachingAssistant;

  public static final String SERIALIZED_NAME_IS_USER_REGISTERED = "isUserRegistered";
  @SerializedName(SERIALIZED_NAME_IS_USER_REGISTERED)
  private Boolean isUserRegistered;

  public static final String SERIALIZED_NAME_IS_USER_TUTOR = "isUserTutor";
  @SerializedName(SERIALIZED_NAME_IS_USER_TUTOR)
  private Boolean isUserTutor;

  public static final String SERIALIZED_NAME_NUMBER_OF_REGISTERED_USERS = "numberOfRegisteredUsers";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_REGISTERED_USERS)
  private Integer numberOfRegisteredUsers;

  public static final String SERIALIZED_NAME_TEACHING_ASSISTANT_NAME = "teachingAssistantName";
  @SerializedName(SERIALIZED_NAME_TEACHING_ASSISTANT_NAME)
  private String teachingAssistantName;

  public static final String SERIALIZED_NAME_COURSE_TITLE = "courseTitle";
  @SerializedName(SERIALIZED_NAME_COURSE_TITLE)
  private String courseTitle;

  public static final String SERIALIZED_NAME_NEXT_SESSION = "nextSession";
  @SerializedName(SERIALIZED_NAME_NEXT_SESSION)
  private TutorialGroupSession nextSession;

  public static final String SERIALIZED_NAME_TUTORIAL_GROUP_SCHEDULE = "tutorialGroupSchedule";
  @SerializedName(SERIALIZED_NAME_TUTORIAL_GROUP_SCHEDULE)
  private TutorialGroupSchedule tutorialGroupSchedule;

  public static final String SERIALIZED_NAME_TUTORIAL_GROUP_SESSIONS = "tutorialGroupSessions";
  @SerializedName(SERIALIZED_NAME_TUTORIAL_GROUP_SESSIONS)
  private Set<TutorialGroupSession> tutorialGroupSessions = new LinkedHashSet<>();

  public TutorialGroup() {
  }

  public TutorialGroup id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public TutorialGroup course(Course course) {
    
    this.course = course;
    return this;
  }

   /**
   * Get course
   * @return course
  **/
  @javax.annotation.Nullable

  public Course getCourse() {
    return course;
  }


  public void setCourse(Course course) {
    this.course = course;
  }


  public TutorialGroup title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nonnull

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public TutorialGroup additionalInformation(String additionalInformation) {
    
    this.additionalInformation = additionalInformation;
    return this;
  }

   /**
   * Get additionalInformation
   * @return additionalInformation
  **/
  @javax.annotation.Nullable

  public String getAdditionalInformation() {
    return additionalInformation;
  }


  public void setAdditionalInformation(String additionalInformation) {
    this.additionalInformation = additionalInformation;
  }


  public TutorialGroup capacity(Integer capacity) {
    
    this.capacity = capacity;
    return this;
  }

   /**
   * Get capacity
   * minimum: 1
   * @return capacity
  **/
  @javax.annotation.Nullable

  public Integer getCapacity() {
    return capacity;
  }


  public void setCapacity(Integer capacity) {
    this.capacity = capacity;
  }


  public TutorialGroup isOnline(Boolean isOnline) {
    
    this.isOnline = isOnline;
    return this;
  }

   /**
   * Get isOnline
   * @return isOnline
  **/
  @javax.annotation.Nonnull

  public Boolean getIsOnline() {
    return isOnline;
  }


  public void setIsOnline(Boolean isOnline) {
    this.isOnline = isOnline;
  }


  public TutorialGroup campus(String campus) {
    
    this.campus = campus;
    return this;
  }

   /**
   * Get campus
   * @return campus
  **/
  @javax.annotation.Nullable

  public String getCampus() {
    return campus;
  }


  public void setCampus(String campus) {
    this.campus = campus;
  }


  public TutorialGroup language(LanguageEnum language) {
    
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @javax.annotation.Nullable

  public LanguageEnum getLanguage() {
    return language;
  }


  public void setLanguage(LanguageEnum language) {
    this.language = language;
  }


  public TutorialGroup teachingAssistant(User teachingAssistant) {
    
    this.teachingAssistant = teachingAssistant;
    return this;
  }

   /**
   * Get teachingAssistant
   * @return teachingAssistant
  **/
  @javax.annotation.Nullable

  public User getTeachingAssistant() {
    return teachingAssistant;
  }


  public void setTeachingAssistant(User teachingAssistant) {
    this.teachingAssistant = teachingAssistant;
  }


  public TutorialGroup isUserRegistered(Boolean isUserRegistered) {
    
    this.isUserRegistered = isUserRegistered;
    return this;
  }

   /**
   * Get isUserRegistered
   * @return isUserRegistered
  **/
  @javax.annotation.Nullable

  public Boolean getIsUserRegistered() {
    return isUserRegistered;
  }


  public void setIsUserRegistered(Boolean isUserRegistered) {
    this.isUserRegistered = isUserRegistered;
  }


  public TutorialGroup isUserTutor(Boolean isUserTutor) {
    
    this.isUserTutor = isUserTutor;
    return this;
  }

   /**
   * Get isUserTutor
   * @return isUserTutor
  **/
  @javax.annotation.Nullable

  public Boolean getIsUserTutor() {
    return isUserTutor;
  }


  public void setIsUserTutor(Boolean isUserTutor) {
    this.isUserTutor = isUserTutor;
  }


  public TutorialGroup numberOfRegisteredUsers(Integer numberOfRegisteredUsers) {
    
    this.numberOfRegisteredUsers = numberOfRegisteredUsers;
    return this;
  }

   /**
   * Get numberOfRegisteredUsers
   * @return numberOfRegisteredUsers
  **/
  @javax.annotation.Nullable

  public Integer getNumberOfRegisteredUsers() {
    return numberOfRegisteredUsers;
  }


  public void setNumberOfRegisteredUsers(Integer numberOfRegisteredUsers) {
    this.numberOfRegisteredUsers = numberOfRegisteredUsers;
  }


  public TutorialGroup teachingAssistantName(String teachingAssistantName) {
    
    this.teachingAssistantName = teachingAssistantName;
    return this;
  }

   /**
   * Get teachingAssistantName
   * @return teachingAssistantName
  **/
  @javax.annotation.Nullable

  public String getTeachingAssistantName() {
    return teachingAssistantName;
  }


  public void setTeachingAssistantName(String teachingAssistantName) {
    this.teachingAssistantName = teachingAssistantName;
  }


  public TutorialGroup courseTitle(String courseTitle) {
    
    this.courseTitle = courseTitle;
    return this;
  }

   /**
   * Get courseTitle
   * @return courseTitle
  **/
  @javax.annotation.Nullable

  public String getCourseTitle() {
    return courseTitle;
  }


  public void setCourseTitle(String courseTitle) {
    this.courseTitle = courseTitle;
  }


  public TutorialGroup nextSession(TutorialGroupSession nextSession) {
    
    this.nextSession = nextSession;
    return this;
  }

   /**
   * Get nextSession
   * @return nextSession
  **/
  @javax.annotation.Nullable

  public TutorialGroupSession getNextSession() {
    return nextSession;
  }


  public void setNextSession(TutorialGroupSession nextSession) {
    this.nextSession = nextSession;
  }


  public TutorialGroup tutorialGroupSchedule(TutorialGroupSchedule tutorialGroupSchedule) {
    
    this.tutorialGroupSchedule = tutorialGroupSchedule;
    return this;
  }

   /**
   * Get tutorialGroupSchedule
   * @return tutorialGroupSchedule
  **/
  @javax.annotation.Nullable

  public TutorialGroupSchedule getTutorialGroupSchedule() {
    return tutorialGroupSchedule;
  }


  public void setTutorialGroupSchedule(TutorialGroupSchedule tutorialGroupSchedule) {
    this.tutorialGroupSchedule = tutorialGroupSchedule;
  }


  public TutorialGroup tutorialGroupSessions(Set<TutorialGroupSession> tutorialGroupSessions) {
    
    this.tutorialGroupSessions = tutorialGroupSessions;
    return this;
  }

  public TutorialGroup addTutorialGroupSessionsItem(TutorialGroupSession tutorialGroupSessionsItem) {
    if (this.tutorialGroupSessions == null) {
      this.tutorialGroupSessions = new LinkedHashSet<>();
    }
    this.tutorialGroupSessions.add(tutorialGroupSessionsItem);
    return this;
  }

   /**
   * Get tutorialGroupSessions
   * @return tutorialGroupSessions
  **/
  @javax.annotation.Nullable

  public Set<TutorialGroupSession> getTutorialGroupSessions() {
    return tutorialGroupSessions;
  }


  public void setTutorialGroupSessions(Set<TutorialGroupSession> tutorialGroupSessions) {
    this.tutorialGroupSessions = tutorialGroupSessions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TutorialGroup tutorialGroup = (TutorialGroup) o;
    return Objects.equals(this.id, tutorialGroup.id) &&
        Objects.equals(this.course, tutorialGroup.course) &&
        Objects.equals(this.title, tutorialGroup.title) &&
        Objects.equals(this.additionalInformation, tutorialGroup.additionalInformation) &&
        Objects.equals(this.capacity, tutorialGroup.capacity) &&
        Objects.equals(this.isOnline, tutorialGroup.isOnline) &&
        Objects.equals(this.campus, tutorialGroup.campus) &&
        Objects.equals(this.language, tutorialGroup.language) &&
        Objects.equals(this.teachingAssistant, tutorialGroup.teachingAssistant) &&
        Objects.equals(this.isUserRegistered, tutorialGroup.isUserRegistered) &&
        Objects.equals(this.isUserTutor, tutorialGroup.isUserTutor) &&
        Objects.equals(this.numberOfRegisteredUsers, tutorialGroup.numberOfRegisteredUsers) &&
        Objects.equals(this.teachingAssistantName, tutorialGroup.teachingAssistantName) &&
        Objects.equals(this.courseTitle, tutorialGroup.courseTitle) &&
        Objects.equals(this.nextSession, tutorialGroup.nextSession) &&
        Objects.equals(this.tutorialGroupSchedule, tutorialGroup.tutorialGroupSchedule) &&
        Objects.equals(this.tutorialGroupSessions, tutorialGroup.tutorialGroupSessions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, course, title, additionalInformation, capacity, isOnline, campus, language, teachingAssistant, isUserRegistered, isUserTutor, numberOfRegisteredUsers, teachingAssistantName, courseTitle, nextSession, tutorialGroupSchedule, tutorialGroupSessions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TutorialGroup {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    course: ").append(toIndentedString(course)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    additionalInformation: ").append(toIndentedString(additionalInformation)).append("\n");
    sb.append("    capacity: ").append(toIndentedString(capacity)).append("\n");
    sb.append("    isOnline: ").append(toIndentedString(isOnline)).append("\n");
    sb.append("    campus: ").append(toIndentedString(campus)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    teachingAssistant: ").append(toIndentedString(teachingAssistant)).append("\n");
    sb.append("    isUserRegistered: ").append(toIndentedString(isUserRegistered)).append("\n");
    sb.append("    isUserTutor: ").append(toIndentedString(isUserTutor)).append("\n");
    sb.append("    numberOfRegisteredUsers: ").append(toIndentedString(numberOfRegisteredUsers)).append("\n");
    sb.append("    teachingAssistantName: ").append(toIndentedString(teachingAssistantName)).append("\n");
    sb.append("    courseTitle: ").append(toIndentedString(courseTitle)).append("\n");
    sb.append("    nextSession: ").append(toIndentedString(nextSession)).append("\n");
    sb.append("    tutorialGroupSchedule: ").append(toIndentedString(tutorialGroupSchedule)).append("\n");
    sb.append("    tutorialGroupSessions: ").append(toIndentedString(tutorialGroupSessions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("course");
    openapiFields.add("title");
    openapiFields.add("additionalInformation");
    openapiFields.add("capacity");
    openapiFields.add("isOnline");
    openapiFields.add("campus");
    openapiFields.add("language");
    openapiFields.add("teachingAssistant");
    openapiFields.add("isUserRegistered");
    openapiFields.add("isUserTutor");
    openapiFields.add("numberOfRegisteredUsers");
    openapiFields.add("teachingAssistantName");
    openapiFields.add("courseTitle");
    openapiFields.add("nextSession");
    openapiFields.add("tutorialGroupSchedule");
    openapiFields.add("tutorialGroupSessions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("title");
    openapiRequiredFields.add("isOnline");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TutorialGroup
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TutorialGroup.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TutorialGroup is not found in the empty JSON string", TutorialGroup.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!TutorialGroup.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TutorialGroup` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : TutorialGroup.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the optional field `course`
      if (jsonObj.get("course") != null && !jsonObj.get("course").isJsonNull()) {
        Course.validateJsonObject(jsonObj.getAsJsonObject("course"));
      }
      if (!jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("additionalInformation") != null && !jsonObj.get("additionalInformation").isJsonNull()) && !jsonObj.get("additionalInformation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `additionalInformation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("additionalInformation").toString()));
      }
      if ((jsonObj.get("campus") != null && !jsonObj.get("campus").isJsonNull()) && !jsonObj.get("campus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `campus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("campus").toString()));
      }
      if ((jsonObj.get("language") != null && !jsonObj.get("language").isJsonNull()) && !jsonObj.get("language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("language").toString()));
      }
      // validate the optional field `teachingAssistant`
      if (jsonObj.get("teachingAssistant") != null && !jsonObj.get("teachingAssistant").isJsonNull()) {
        User.validateJsonObject(jsonObj.getAsJsonObject("teachingAssistant"));
      }
      if ((jsonObj.get("teachingAssistantName") != null && !jsonObj.get("teachingAssistantName").isJsonNull()) && !jsonObj.get("teachingAssistantName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `teachingAssistantName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("teachingAssistantName").toString()));
      }
      if ((jsonObj.get("courseTitle") != null && !jsonObj.get("courseTitle").isJsonNull()) && !jsonObj.get("courseTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `courseTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("courseTitle").toString()));
      }
      // validate the optional field `nextSession`
      if (jsonObj.get("nextSession") != null && !jsonObj.get("nextSession").isJsonNull()) {
        TutorialGroupSession.validateJsonObject(jsonObj.getAsJsonObject("nextSession"));
      }
      // validate the optional field `tutorialGroupSchedule`
      if (jsonObj.get("tutorialGroupSchedule") != null && !jsonObj.get("tutorialGroupSchedule").isJsonNull()) {
        TutorialGroupSchedule.validateJsonObject(jsonObj.getAsJsonObject("tutorialGroupSchedule"));
      }
      if (jsonObj.get("tutorialGroupSessions") != null && !jsonObj.get("tutorialGroupSessions").isJsonNull()) {
        JsonArray jsonArraytutorialGroupSessions = jsonObj.getAsJsonArray("tutorialGroupSessions");
        if (jsonArraytutorialGroupSessions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("tutorialGroupSessions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `tutorialGroupSessions` to be an array in the JSON string but got `%s`", jsonObj.get("tutorialGroupSessions").toString()));
          }

          // validate the optional field `tutorialGroupSessions` (array)
          for (int i = 0; i < jsonArraytutorialGroupSessions.size(); i++) {
            TutorialGroupSession.validateJsonObject(jsonArraytutorialGroupSessions.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TutorialGroup.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TutorialGroup' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TutorialGroup> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TutorialGroup.class));

       return (TypeAdapter<T>) new TypeAdapter<TutorialGroup>() {
           @Override
           public void write(JsonWriter out, TutorialGroup value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TutorialGroup read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TutorialGroup given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TutorialGroup
  * @throws IOException if the JSON string is invalid with respect to TutorialGroup
  */
  public static TutorialGroup fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TutorialGroup.class);
  }

 /**
  * Convert an instance of TutorialGroup to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

